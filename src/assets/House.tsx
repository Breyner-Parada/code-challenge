/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/house.glb -t 
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

interface GLTFAction extends THREE.AnimationAction {
  action: THREE.AnimationAction;
}

type GLTFResult = GLTF & {
  nodes: {
    ["4_House_0"]: THREE.Mesh;
    ["4_Glass_0"]: THREE.Mesh;
  };
  materials: {
    House: THREE.MeshStandardMaterial;
    Glass: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function HouseModel2(props: React.ComponentProps<'group'>) {
  const { nodes, materials, scene } = useGLTF("/models/house.glb") as unknown as GLTFResult;

  console.log(scene.toJSON());
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes["4_House_0"].geometry}
        material={materials.House}
        position={[0, 1.602, 0]}
        rotation={[-1.569, 0, 0]}
      />
      <mesh
        geometry={nodes["4_Glass_0"].geometry}
        material={materials.Glass}
        position={[0, 1.602, 0]}
        rotation={[-1.569, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/models/house.glb");
